@page
@model eCashier.Pages.FacultyModel
@{
    ViewData["Title"] = "Faculty";
    Layout = "_Staff";
}

@* <div class="container-fluid">
    <div class="col">
        <div class="card">
            <h6 class="font-weight-bold card-header">
                Welcome
            </h6>
            <div class="card-body">
                This is the main faculty page.
            </div>
        </div>
    </div>
</div> *@

<div class="container-fluid">
    <!-- Company Details Card -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Company Details</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <h6>Company Name</h6>
                            <p>American University of Bahrain</p>
                        </div>
                        <div class="col-md-3">
                            <h6>Founded</h6>
                            <p>2019</p>
                        </div>
                        <div class="col-md-3">
                            <h6>Employees</h6>
                            <p>500+</p>
                        </div>
                        <div class="col-md-3">
                            <h6>Location</h6>
                            <p>Kingdom of Bahrain</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Graph and Stats Row -->
    <div class="row mb-4 d-flex">
        <!-- Graph Card -->
        <div class="col-md-8 d-flex">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title mb-0">Performance Metrics</h5>
                </div>
                <div class="card-body ">
                    <div id="graph-container" class="position-relative" style="height: 400px;">
                        <canvas id="performanceChart" class="w-100 h-100"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Stats Card -->
        <div class="col-md-4 d-flex">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title mb-0">Quick Stats</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6 class="text-muted">Revenue</h6>
                        <p>$1.2M</p>
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted">Growth</h6>
                        <p>+25%</p>
                    </div>
                    <div>
                        <h6 class="text-muted">Customers</h6>
                        <p>1,500+</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Information Cards -->
    <div class="row mb-4 d-flex">
        <!-- Recent Activities -->
        <div class="col-md-6 d-flex">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title mb-0">Recent Activities</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">New client onboarding completed</li>
                        <li class="list-group-item">Product update released</li>
                        <li class="list-group-item">Team meeting scheduled</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Upcoming Tasks -->
        <div class="col-md-6 d-flex">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title mb-0">Upcoming Tasks</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="task1">
                                <label class="form-check-label" for="task1">
                                    Quarterly review meeting
                                </label>
                            </div>
                        </li>
                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="task2">
                                <label class="form-check-label" for="task2">
                                    Update documentation
                                </label>
                            </div>
                        </li>
                        <li class="list-group-item">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="task3">
                                <label class="form-check-label" for="task3">
                                    Client presentation
                                </label>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    class PerformanceGraph {
        constructor(canvasId) {
            this.canvas = document.getElementById(canvasId);
            this.container = document.getElementById('graph-container');
            this.ctx = this.canvas.getContext("2d");
            this.dataPoints = [10, 20, 15, 30, 25, 40, 35];
            this.dataLabels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul"];

            this.initializeGraph();

            window.addEventListener('resize', () => {
                this.initializeGraph();
            });
        }

        initializeGraph() {
            const rect = this.container.getBoundingClientRect();
            const dpr = window.devicePixelRatio || 1;
            this.canvas.width = rect.width * dpr;
            this.canvas.height = rect.height * dpr;
            this.ctx.scale(dpr, dpr);

            this.canvas.style.width = `${rect.width}px`;
            this.canvas.style.height = `${rect.height}px`;

            this.drawGraph();
        }

        drawGraph() {
            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);

            const padding = 20;
            const rightPadding = 70;
            const maxDataValue = Math.max(...this.dataPoints);
            const graphHeight = (this.canvas.height / window.devicePixelRatio) - padding * 2;
            const graphWidth = (this.canvas.width / window.devicePixelRatio) - padding - rightPadding;
            const stepX = graphWidth / (this.dataPoints.length - 1);
            const scaleY = graphHeight / maxDataValue;

            // Draw the line
            this.ctx.beginPath();
            this.ctx.moveTo(padding, (this.canvas.height / window.devicePixelRatio) - padding - this.dataPoints[0] * scaleY);

            for (let i = 1; i < this.dataPoints.length; i++) {
                this.ctx.lineTo(
                    padding + i * stepX,
                    (this.canvas.height / window.devicePixelRatio) - padding - this.dataPoints[i] * scaleY
                );
            }

            // Using Bootstrap primary color
            this.ctx.strokeStyle = "#0d6efd";
            this.ctx.lineWidth = 2;
            this.ctx.stroke();

            // Draw data points
            this.ctx.fillStyle = "#0d6efd";
            this.dataPoints.forEach((value, index) => {
                const x = padding + index * stepX;
                const y = (this.canvas.height / window.devicePixelRatio) - padding - value * scaleY;

                this.ctx.beginPath();
                this.ctx.arc(x, y, 3, 0, Math.PI * 2);
                this.ctx.fill();
            });

            // Draw x-axis labels
            this.ctx.fillStyle = "#212529"; // Bootstrap dark color
            this.ctx.font = "12px var(--bs-body-font-family)"; // Using Bootstrap font
            this.dataLabels.forEach((label, index) => {
                const x = padding + index * stepX;
                const y = (this.canvas.height / window.devicePixelRatio) - padding + 15;
                this.ctx.fillText(label, x - 10, y);
            });
        }
    }

    // Initialize the graph
    const graph = new PerformanceGraph("performanceChart");
</script>